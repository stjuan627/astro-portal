---
import { Image } from 'astro:assets';
import logo from '../assets/logo.png';

const { boxed = false } = Astro.props;
const containerClass = boxed ? 'container mx-auto' : 'w-full';
---

<header class="navbar bg-base-100 border-b border-base-200 sticky top-0 z-40">
  <div class={containerClass + ' lg:px-4'}>
    <!-- Mobile: Hamburger + Logo + Theme -->
    <div class="lg:hidden navbar-start w-full flex justify-between">
      <a href="/" class="flex items-center gap-2 text-xl font-bold">
        <Image src={logo} alt="escape road" class="size-12 rounded-md" />
        <div class="leading-none">Escape <span class="text-[#ff950b] block font-bold">Roads</span></div>
      </a>

      <label class="swap swap-rotate btn btn-ghost btn-circle">
        <input type="checkbox" class="theme-controller" value="dark" />
        <i class="ph ph-sun swap-on text-2xl"></i>
        <i class="ph ph-moon swap-off text-2xl"></i>
      </label>
    </div>

    <!-- Desktop: Logo + Theme -->
    <div class="hidden lg:flex w-full justify-between">
      <a href="/" class="flex items-center gap-2 text-xl font-bold">
        <Image src={logo} alt="Escape Road" class="size-12 rounded-md" />
        <div class="leading-none">Escape <span class="text-[#ff950b] block font-bold">Road</span></div>
      </a>

      <!-- <label class="swap swap-rotate btn btn-ghost btn-circle">
        <input type="checkbox" class="theme-controller" value="dark" />
        <i class="ph ph-sun swap-on text-2xl"></i>
        <i class="ph ph-moon swap-off text-2xl"></i>
      </label> -->
    </div>
  </div>
</header>

<script>
  // Debug logging for theme changes
  const themeControllers = document.querySelectorAll('.theme-controller') as NodeListOf<HTMLInputElement>;

  themeControllers.forEach(controller => {
    controller.addEventListener('change', (e) => {
      const isDark = (e.target as HTMLInputElement).checked;
      console.log(`Theme switched to ${isDark ? 'dark' : 'light'} mode`);
      // 同步另一个主题切换器的状态
      themeControllers.forEach(otherController => {
        if (otherController !== e.target) {
          otherController.checked = isDark;
        }
      });
    });
  });
</script>
