---
interface Props {
  gameTitle: string;
  videos: {
    id: string;
    title: string;
    date: string;
  }[];
}

const { gameTitle, videos } = Astro.props;

// YouTube缩略图质量选项：
// default.jpg (120x90)
// mqdefault.jpg (320x180)
// hqdefault.jpg (480x360)
// sddefault.jpg (640x480)
// maxresdefault.jpg (1280x720)
const getThumbnailUrl = (videoId: string) =>
  `https://i.ytimg.com/vi/${videoId}/hqdefault.jpg`;
---

<section class="my-8" aria-label={`${gameTitle} related videos`}>
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
    {videos.map(video => (
      <article class="card bg-base-100 shadow-xl overflow-hidden rounded-md" itemscope itemtype="http://schema.org/VideoObject">
        <div class="video-container aspect-video relative">
          <div
            class="video-placeholder cursor-pointer relative pt-[56.25%]"
            data-video-id={video.id}
          >
            <img
              src={getThumbnailUrl(video.id)}
              alt={`${video.title} - ${gameTitle} gameplay video`}
              class="absolute top-0 left-0 w-full h-full object-cover"
              loading="lazy"
              itemprop="thumbnailUrl"
            />
            <div class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 hover:bg-opacity-40 transition-opacity">
              <svg class="w-16 h-16 text-white" viewBox="0 0 24 24">
                <path fill="currentColor" d="M8 5v14l11-7z"/>
              </svg>
            </div>
          </div>
          <div class="youtube-embed hidden absolute top-0 left-0 w-full h-full"></div>
        </div>
        <div class="card-body p-2">
          <h3 class="card-title text-sm" itemprop="name">
            {video.title}
          </h3>
          <meta itemprop="uploadDate" content={video.date} />
          <meta itemprop="embedUrl" content={`https://www.youtube.com/embed/${video.id}`} />
        </div>
      </article>
    ))}
  </div>
</section>

<script>
  function initializeVideoPlaceholders() {
    const placeholders = document.querySelectorAll('.video-placeholder');

    placeholders.forEach(placeholder => {
      placeholder.addEventListener('click', function() {
        const videoId = this.getAttribute('data-video-id');
        const container = this.closest('.video-container');
        const embedContainer = container?.querySelector('.youtube-embed');

        if (videoId && embedContainer) {
          const iframe = document.createElement('iframe');
          iframe.src = `https://www.youtube.com/embed/${videoId}?autoplay=1`;
          iframe.title = "YouTube video player";
          iframe.allow = "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture";
          iframe.allowFullscreen = true;
          iframe.className = "absolute top-0 left-0 w-full h-full";

          embedContainer.classList.remove('hidden');
          embedContainer.appendChild(iframe);
          this.style.display = 'none';

          console.debug(`Loaded YouTube video: ${videoId}`);
        }
      });
    });
  }

  document.addEventListener('astro:page-load', initializeVideoPlaceholders);
</script>
