---
interface Props {
  gameUrl: string;
  title?: string;
  coverImage?: string;
  featuredImage?: string;
  description?: string;
}

const {
  gameUrl,
  title = 'Game Title',
  coverImage = '',
  featuredImage = '',
  description = 'Game Description'
} = Astro.props;

console.debug('[GameFrame] Initializing:', { gameUrl, title });
---

<div class="w-full bg-zinc-100 rounded-lg overflow-hidden relative">
  <!-- Add overlay -->
  <div class="game-frame-overlay fixed inset-0 pointer-events-none transition-colors duration-300"></div>

  <div class="aspect-[16/9] relative" id="game-container">
    <!-- Background Image -->
    <img
      src={featuredImage || coverImage}
      alt={title}
      class="absolute inset-0 w-full h-full object-cover"
    />

    <!-- Facade -->
    <div class="absolute inset-0 flex items-center justify-center facade-content">
      <div class="text-center max-w-2xl px-4 z-10">
        <strong class="block text-3xl lg:text-5xl font-bold text-white mb-4">{title}</strong>
        <!-- <p class="hidden sm:block py-6 mb-8 text-white/90">{description}</p> -->
        {coverImage && (
          <img src={coverImage} alt={title} class="w-full max-w-36 mx-auto mb-4 hidden sm:block" />
        )}
        <button
          class="btn btn-md lg:btn-lg px-8 lg:px-12 start-game-btn rounded-full text-white/80 hover:text-white bg-gradient-to-r from-primary to-secondary hover:from-primary/80 hover:to-secondary/80 border-0 animate-pulse-slow shadow-lg shadow-primary/50 hover:shadow-xl hover:shadow-primary/60 transition-all duration-300 hover:scale-105 relative group"
        >
          <span class="flex items-center gap-2">
            Play Now
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </span>
        </button>
      </div>
    </div>

    <!-- 修改加载动画部分 -->
    <div id="loading-spinner" class="hidden absolute inset-0 flex items-center justify-center z-20">
      <!-- 背景遮罩 -->
      <div class="absolute inset-0 bg-black/80 backdrop-blur-sm"></div>
      <!-- 加载动画内容 -->
      <div class="relative flex flex-col items-center">
        <div class="loading loading-spinner text-primary w-32 h-32"></div>
        <p class="mt-6 text-white/90 text-xl font-medium">Loading...</p>
      </div>
    </div>

    <!-- Game iframe (hidden by default) -->
    <iframe
      class="absolute inset-0 w-full h-full hidden"
      title={title}
      referrerpolicy="no-referrer"
      allow="fullscreen; autoplay; clipboard-write"
      loading="lazy"
      onload="window.handleGameLoaded()"
    />
  </div>
  <!-- Action Bar -->
  <div class="top-0 left-0 right-0 flex flex-col sm:flex-row justify-between p-4 z-30 gap-2">
    <div class="grow">
      <h1 class="text-2xl font-bold">{title} Unblocked</h1>
    </div>
    <!-- Left: Social Media Share -->
    <div class="flex gap-2 justify-end">
      <button class="btn btn-sm btn-circle" data-share="facebook">
        <span class="sr-only">Share on Facebook</span>
        <svg role="img" viewBox="0 0 24 24" class="h-5 w-5 fill-[#1877F2]" xmlns="http://www.w3.org/2000/svg">
          <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
        </svg>
      </button>
      <button class="btn btn-sm btn-circle" data-share="x">
        <span class="sr-only">Share on X</span>
        <svg role="img" viewBox="0 0 24 24" class="h-5 w-5 fill-[#000000]" xmlns="http://www.w3.org/2000/svg">
          <path d="M18.901 1.153h3.68l-8.04 9.19L24 22.846h-7.406l-5.8-7.584-6.638 7.584H.474l8.6-9.83L0 1.154h7.594l5.243 6.932ZM17.61 20.644h2.039L6.486 3.24H4.298Z"/>
        </svg>
      </button>
      <button class="btn btn-sm btn-circle" data-share="reddit">
        <span class="sr-only">Share on Reddit</span>
        <svg role="img" viewBox="0 0 24 24" class="h-5 w-5 fill-[#FF4500]" xmlns="http://www.w3.org/2000/svg">
          <path d="M12 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0zm5.01 4.744c.688 0 1.25.561 1.25 1.249a1.25 1.25 0 0 1-2.498.056l-2.597-.547-.8 3.747c1.824.07 3.48.632 4.674 1.488.308-.309.73-.491 1.207-.491.968 0 1.754.786 1.754 1.754 0 .716-.435 1.333-1.01 1.614a3.111 3.111 0 0 1 .042.52c0 2.694-3.13 4.87-7.004 4.87-3.874 0-7.004-2.176-7.004-4.87 0-.183.015-.366.043-.534A1.748 1.748 0 0 1 4.028 12c0-.968.786-1.754 1.754-1.754.463 0 .898.196 1.207.49 1.207-.883 2.878-1.43 4.744-1.487l.885-4.182a.342.342 0 0 1 .14-.197.35.35 0 0 1 .238-.042l2.906.617a1.214 1.214 0 0 1 1.108-.701zM9.25 12C8.561 12 8 12.562 8 13.25c0 .687.561 1.248 1.25 1.248.687 0 1.248-.561 1.248-1.249 0-.688-.561-1.249-1.249-1.249zm5.5 0c-.687 0-1.248.561-1.248 1.25 0 .687.561 1.248 1.249 1.248.688 0 1.249-.561 1.249-1.249 0-.687-.562-1.249-1.25-1.249zm-5.466 3.99a.327.327 0 0 0-.231.094.33.33 0 0 0 0 .463c.842.842 2.484.913 2.961.913.477 0 2.105-.056 2.961-.913a.361.361 0 0 0 .029-.463.33.33 0 0 0-.464 0c-.547.533-1.684.73-2.512.73-.828 0-1.979-.196-2.512-.73a.326.326 0 0 0-.232-.095z"/>
        </svg>
      </button>
      <button class="btn btn-sm btn-circle" data-share="whatsapp">
        <span class="sr-only">Share on What's App</span>
        <svg role="img" viewBox="0 0 24 24" class="h-5 w-5 fill-[#25D366]" xmlns="http://www.w3.org/2000/svg">
          <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z"/>
        </svg>
      </button>

      <!-- <button class="btn btn-circle lights-btn" data-action="lights">
        <i class="ph ph-lightbulb"></i>
      </button> -->
      <button class="btn btn-circle btn-sm" data-action="fullscreen">
        <i class="ph ph-corners-out text-xl"></i>
      </button>
    </div>
  </div>
</div>

<script define:vars={{ gameUrl }}>
// 游戏加载状态管理
let isGameLoaded = false;

document.addEventListener('DOMContentLoaded', () => {
  const startBtn = document.querySelector('.start-game-btn');
  startBtn?.addEventListener('click', window.startGame);

  document.querySelectorAll('[data-share]').forEach(btn => {
    btn.addEventListener('click', () => {
      const platform = btn.getAttribute('data-share');
      switch(platform) {
        case 'facebook':
          shareOnFacebook();
          break;
        case 'x':
          shareOnX();
          break;
        case 'reddit':
          shareOnReddit();
          break;
        case 'whatsapp':
          shareOnWhatsApp();
          break;
      }
    });
  });

  document.querySelectorAll('[data-action]').forEach(btn => {
    btn.addEventListener('click', () => {
      const action = btn.getAttribute('data-action');
      switch(action) {
        case 'lights':
          toggleLights();
          break;
        case 'fullscreen':
          toggleFullscreen();
          break;
      }
    });
  });
});

window.startGame = () => {
  if (isGameLoaded) return;

  console.debug('[GameFrame] Starting game:', gameUrl);

  const container = document.getElementById('game-container');
  const iframe = container.querySelector('iframe');
  const facade = container.querySelector('.facade-content');
  const spinner = container.querySelector('#loading-spinner');

  spinner.classList.remove('hidden');

  iframe.src = gameUrl;
  iframe.classList.remove('hidden');

  facade.style.opacity = '0';
  facade.style.pointerEvents = 'none';
};

window.handleGameLoaded = () => {
  if (!isGameLoaded) {
    console.debug('[GameFrame] Game loaded');
    const container = document.getElementById('game-container');
    const spinner = container.querySelector('#loading-spinner');

    spinner.classList.add('hidden');
    isGameLoaded = true;
  }
};

function shareOnFacebook() {
  console.debug('[GameFrame] Sharing on Facebook');
  window.open('https://www.facebook.com/sharer/sharer.php?u=' + encodeURIComponent(location.href), '_blank');
}

function shareOnX() {
  console.debug('[GameFrame] Sharing on X');
  window.open('https://x.com/intent/tweet?text=' + encodeURIComponent(location.href), '_blank');
}

function shareOnReddit() {
  console.debug('[GameFrame] Sharing on Reddit');
  window.open('https://www.reddit.com/submit?url=' + encodeURIComponent(location.href), '_blank');
}

function shareOnWhatsApp() {
  console.debug('[GameFrame] Sharing on WhatsApp');
  window.open('https://wa.me/?text=' + encodeURIComponent(location.href), '_blank');
}

function toggleLights() {
  console.debug('[GameFrame] Toggling lights');
  const html = document.documentElement;
  const btn = document.querySelector('.lights-btn');

  if(html.getAttribute('data-theme') === 'dark') {
    html.setAttribute('data-theme', 'light');
    btn.textContent = 'Lights Off';
  } else {
    html.setAttribute('data-theme', 'dark');
    btn.textContent = 'Lights On';
  }
}

function toggleFullscreen() {
  console.debug('[GameFrame] Toggling fullscreen');
  const container = document.getElementById('game-container');

  if (!document.fullscreenElement) {
    container.requestFullscreen().catch(err => {
      console.error(`Error attempting to enable fullscreen: ${err.message}`);
    });
  } else {
    document.exitFullscreen();
  }
}
</script>

<style>
.facade-content {
  transition: opacity 0.3s ease-out;
  background: rgba(0, 0, 0, 0.75);
}

.start-game-btn::before,
.start-game-btn::after {
  content: "";
  position: absolute;
  inset: -4px;
  border-radius: 9999px;
  background: linear-gradient(45deg, var(--p) 0%, var(--s) 100%);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: -1;
}

.start-game-btn::after {
  filter: blur(12px);
}

.start-game-btn:hover::before,
.start-game-btn:hover::after {
  opacity: 0.5;
}

.loading-spinner {
  transition: opacity 0.3s ease;
}

.loading-spinner-inner {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.game-frame-overlay {
  z-index: 40;
  transition: background-color 0.3s ease;
}
</style>
